{"version":3,"sources":["components/Contacts/Contacts.js","components/Form/Form.js","components/Section/Section.js","components/Filter/Filter.js","App.js","index.js"],"names":["Contacts","contacts","this","props","map","contact","name","number","id","Component","Form","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","newContact","nanoid","onSubmitContact","reset","onSubmit","onChange","type","pattern","title","autoComplete","required","Section","children","Filter","App","filter","getNewContact","handleFilter","normalizeFilter","toLowerCase","filteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAGMA,E,4JAWJ,WACE,IAAQC,EAAaC,KAAKC,MAAlBF,SACR,OACE,6BACGA,EAASG,KAAI,SAAAC,GACZ,OACE,qBAAqBC,KAAMD,EAAQC,KAAnC,UACGD,EAAQC,KADX,MACoBD,EAAQE,SADnBF,EAAQG,a,GAjBNC,aA2BRT,I,eC1BTU,E,4MAKJC,MAAQ,CAAEL,KAAM,GAAIC,OAAQ,I,EAE5BK,aAAe,SAAAC,GACb,MAAwBA,EAAEC,OAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBV,EAAOS,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,MAAyB,EAAKP,MAAtBL,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAERY,EAAa,CAAEX,GADVY,cACcd,OAAMC,UAC/B,EAAKJ,MAAMkB,gBAAgBF,GAC3B,EAAKG,S,EAGPA,MAAQ,WACN,EAAKN,SAAS,CAAEV,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,MAAyBL,KAAKS,MAAtBL,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAMgB,SAAUrB,KAAKe,aAArB,UACE,uBACEF,MAAOT,EACPkB,SAAUtB,KAAKU,aACfa,KAAK,OACLnB,KAAK,OACLoB,QAAQ,yHACRC,MAAM,yIACNC,aAAa,MACbC,UAAQ,IAEV,uBACEd,MAAOR,EACPiB,SAAUtB,KAAKU,aACfa,KAAK,MACLnB,KAAK,SACLoB,QAAQ,yFACRC,MAAM,+FACNE,UAAQ,IAEV,wBAAQJ,KAAK,SAAb,gC,GAhDWhB,aAsDJC,ICvDToB,E,4JAMJ,WACE,MAA4B5B,KAAKC,MAAzBwB,EAAR,EAAQA,MAAOI,EAAf,EAAeA,SACf,OACE,oCACE,6BAAKJ,IACJI,S,GAXatB,aAiBPqB,ICjBTE,E,4JAMJ,WACE,MAA4B9B,KAAKC,MAAzBY,EAAR,EAAQA,MAAOS,EAAf,EAAeA,SACf,OACE,mCACE,uBAAOT,MAAOA,EAAOS,SAAUA,U,GAVlBf,aAgBNuB,ICbTC,E,4MACJtB,MAAQ,CACNV,SAAU,CACR,CAAEO,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEC,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,cAEhD2B,OAAQ,I,EAGVC,cAAgB,SAAAhB,GACd,IAAQlB,EAAa,EAAKU,MAAlBV,SACR,EAAKe,SAAS,CAAEf,SAAS,CAAEkB,GAAH,mBAAkBlB,O,EAG5CmC,aAAe,SAAAvB,GACb,IAAQE,EAAUF,EAAEC,OAAZC,MACR,EAAKC,SAAS,CAAEkB,OAAQnB,K,4CAG1B,WACE,MAA6Bb,KAAKS,MAA1BV,EAAR,EAAQA,SAAUiC,EAAlB,EAAkBA,OAEZG,EAAkBH,EAAOI,cACzBC,EAAmBtC,EAASiC,QAAO,SAAA7B,GAAO,OAC9CA,EAAQC,KAAKgC,cAAcE,SAASH,MAGtC,OACE,qCACE,cAAC,EAAD,CAASV,MAAM,YAAf,SACE,cAAC,EAAD,CAAMN,gBAAiBnB,KAAKiC,kBAE9B,eAAC,EAAD,CAASR,MAAM,WAAf,UACE,cAAC,EAAD,CAAQZ,MAAOmB,EAAQV,SAAUtB,KAAKkC,eACtC,cAAC,EAAD,CAAUnC,SAAUsC,c,GApCZ9B,aA2CHwB,IC5CfQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.315bbdbf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Contacts extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n  };\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <ul>\n        {contacts.map(contact => {\n          return (\n            <li key={contact.id} name={contact.name}>\n              {contact.name} : {contact.number}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default Contacts;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nclass Form extends Component {\n  static propTypes = {\n    onSubmitContact: PropTypes.func.isRequired,\n  };\n\n  state = { name: '', number: '' };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const id = nanoid();\n    const newContact = { id, name, number };\n    this.props.onSubmitContact(newContact);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          value={name}\n          onChange={this.handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          autoComplete=\"off\"\n          required\n        />\n        <input\n          value={number}\n          onChange={this.handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Section extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    contact: PropTypes.element,\n  };\n\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section>\n        <h2>{title}</h2>\n        {children}\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Filter extends Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { value, onChange } = this.props;\n    return (\n      <>\n        <input value={value} onChange={onChange}></input>\n      </>\n    );\n  }\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport Contacts from './components/Contacts/Contacts';\nimport Form from './components/Form/Form';\nimport Section from './components/Section/Section';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  getNewContact = newContact => {\n    const { contacts } = this.state;\n    this.setState({ contacts: [newContact, ...contacts] });\n  };\n\n  handleFilter = e => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const normalizeFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <Form onSubmitContact={this.getNewContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={this.handleFilter} />\n          <Contacts contacts={filteredContacts} />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}