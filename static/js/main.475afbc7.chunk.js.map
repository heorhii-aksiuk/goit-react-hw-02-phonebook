{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Contacts/Contacts.js","components/Form/Form.js","components/Section/Section.js","components/Filter/Filter.js","App.js","index.js","components/Section/Section.module.css"],"names":["module","exports","Contacts","this","props","contacts","onRemoveClick","map","id","name","number","className","s","item","onClick","type","Component","Form","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","newContact","nanoid","onSubmitContact","reset","onSubmit","onChange","pattern","title","autoComplete","required","Section","children","section","Filter","App","filter","getNewContact","find","contact","alert","removeContact","handleFilter","normalizeFilter","toLowerCase","filteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.475afbc7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__2YnJx\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nclass Contacts extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n  };\n\n  render() {\n    const { contacts, onRemoveClick } = this.props;\n    return (\n      <ul>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <li className={s.item} key={id} name={name}>\n              <p>\n                {name} : {number}\n              </p>\n              <button onClick={() => onRemoveClick(id)} type=\"button\">\n                Remove\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default Contacts;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nclass Form extends Component {\n  static propTypes = {\n    onSubmitContact: PropTypes.func.isRequired,\n  };\n\n  state = { name: '', number: '' };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const id = nanoid();\n    const newContact = { id, name, number };\n    this.props.onSubmitContact(newContact);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name:\n            <input\n              value={name}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              autoComplete=\"off\"\n              required\n            />\n          </label>\n          <label>\n            Phone:\n            <input\n              value={number}\n              onChange={this.handleChange}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nclass Section extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    contact: PropTypes.element,\n  };\n\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section className={s.section}>\n        <h2 className={s.title}>{title}</h2>\n        {children}\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Filter extends Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { value, onChange } = this.props;\n    return (\n      <>\n        <label>\n          Find contacts by name\n          <input value={value} onChange={onChange}></input>\n        </label>\n      </>\n    );\n  }\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport Contacts from './components/Contacts/Contacts';\nimport Form from './components/Form/Form';\nimport Section from './components/Section/Section';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  getNewContact = newContact => {\n    const { contacts } = this.state;\n\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`);\n    } else {\n      this.setState({ contacts: [newContact, ...contacts] });\n    }\n  };\n\n  removeContact = id => {\n    const { contacts } = this.state;\n    this.setState({\n      contacts: [...contacts].filter(contact => contact.id !== id),\n    });\n  };\n\n  handleFilter = e => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const normalizeFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <Form onSubmitContact={this.getNewContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={this.handleFilter} />\n          <Contacts\n            contacts={filteredContacts}\n            onRemoveClick={this.removeContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1Twe6\",\"title\":\"Section_title__3I2eT\"};"],"sourceRoot":""}