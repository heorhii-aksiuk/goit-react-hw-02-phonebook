{"version":3,"sources":["components/Contacts/Contacts.js","components/Form/Form.js","components/Section/Section.js","App.js","index.js"],"names":["Contacts","contacts","this","props","map","contact","name","id","Component","Form","value","onChange","onSubmit","type","pattern","title","autoComplete","required","Section","children","App","state","handleChange","e","setState","target","handleSubmit","nanoid","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAGMA,E,4JAUJ,WACE,IAAQC,EAAaC,KAAKC,MAAlBF,SACR,OACE,6BACGA,EAASG,KAAI,SAAAC,GACZ,OACE,oBAAqBC,KAAMD,EAAQC,KAAnC,SACGD,EAAQC,MADFD,EAAQE,a,GAhBNC,aA0BRR,IC1BTS,E,4JAOJ,WACE,MAAsCP,KAAKC,MAAnCO,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,SACzB,OACE,uBAAMA,SAAUA,EAAhB,UACE,uBACEF,MAAOA,EACPC,SAAUA,EACVE,KAAK,OACLP,KAAK,OACLQ,QAAQ,yHACRC,MAAM,yIACNC,aAAa,MACbC,UAAQ,IAEV,wBAAQJ,KAAK,SAAb,gC,GArBWL,aA2BJC,IC3BTS,E,4JAMJ,WACE,MAA4BhB,KAAKC,MAAzBY,EAAR,EAAQA,MAAOI,EAAf,EAAeA,SACf,OACE,oCACE,6BAAKJ,IACJI,S,GAXaX,aAiBPU,ICdFE,EAAb,4MAEEC,MAAQ,CACNpB,SAAU,GACVK,KAAM,IAJV,EAOEgB,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAElB,KAAMiB,EAAEE,OAAOf,SARnC,EAWEgB,aAAe,SAAAH,GACb,MAA2B,EAAKF,MAAxBpB,EAAR,EAAQA,SAAUK,EAAlB,EAAkBA,KACZC,EAAKoB,cACXJ,EAAEK,iBACF,EAAKJ,SAAS,CAAEvB,SAAS,GAAD,mBAAMA,GAAN,CAAgB,CAAEK,OAAMC,WAfpD,4CAkBE,WACE,MAA2BL,KAAKmB,MAAxBf,EAAR,EAAQA,KAAML,EAAd,EAAcA,SACd,OACE,qCACE,cAAC,EAAD,CAASc,MAAM,YAAf,SACE,cAAC,EAAD,CACEL,MAAOJ,EACPK,SAAUT,KAAKoB,aACfV,SAAUV,KAAKwB,iBAGnB,cAAC,EAAD,CAASX,MAAM,WAAf,SACE,cAAC,EAAD,CAAUd,SAAUA,aA9B9B,GAAyBO,aAqCVY,ICtCfS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.80ea5755.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Contacts extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n      }),\n    ),\n  };\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <ul>\n        {contacts.map(contact => {\n          return (\n            <li key={contact.id} name={contact.name}>\n              {contact.name}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default Contacts;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Form extends Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { value, onChange, onSubmit } = this.props;\n    return (\n      <form onSubmit={onSubmit}>\n        <input\n          value={value}\n          onChange={onChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          autoComplete=\"off\"\n          required\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Section extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    contact: PropTypes.element,\n  };\n\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section>\n        <h2>{title}</h2>\n        {children}\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport Contacts from './components/Contacts/Contacts';\nimport Form from './components/Form/Form';\nimport Section from './components/Section/Section';\n\nexport class App extends Component {\n  static propTypes = {};\n  state = {\n    contacts: [],\n    name: '',\n  };\n\n  handleChange = e => {\n    this.setState({ name: e.target.value });\n  };\n\n  handleSubmit = e => {\n    const { contacts, name } = this.state;\n    const id = nanoid();\n    e.preventDefault();\n    this.setState({ contacts: [...contacts, { name, id }] });\n  };\n\n  render() {\n    const { name, contacts } = this.state;\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <Form\n            value={name}\n            onChange={this.handleChange}\n            onSubmit={this.handleSubmit}\n          />\n        </Section>\n        <Section title=\"Contacts\">\n          <Contacts contacts={contacts} />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}